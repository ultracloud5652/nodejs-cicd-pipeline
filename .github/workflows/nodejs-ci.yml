name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set Up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23

      # Step 3: Install Dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run Tests
      - name: Run tests
        run: npm test

      # Step 5: Build Docker Image
      - name: Build Docker image
        run: docker build -t ultracloud5652/nodejs-cicd-app .

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      # Step 7: Push Docker Image to Docker Hub
      - name: Push Docker image to Docker Hub with "latest" tag
        run: |
          docker tag ultracloud5652/nodejs-cicd-app ultracloud5652/nodejs-cicd-app:latest
          docker push ultracloud5652/nodejs-cicd-app:latest

      - name: Tag and push Docker image with commit SHA
        run: |
          TAG=${{ github.sha }}
          docker tag ultracloud5652/nodejs-cicd-app ultracloud5652/nodejs-cicd-app:$TAG
          docker push ultracloud5652/nodejs-cicd-app:$TAG

  deploy_to_staging:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      # Step 8: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 9: Deploy to ECS (Staging)
      - name: Deploy to ECS (Staging)
        run: |
          aws ecs update-service \
            --cluster cicd-fargate-cluster \
            --service nodejs-cicd-service-staging \
            --force-new-deployment

  deploy_to_production:
    needs: deploy_to_staging
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      # Step 10: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 11: Deploy to ECS (Production)
      - name: Deploy to ECS (Production)
        run: |
          aws ecs update-service \
            --cluster cicd-fargate-cluster \
            --service nodejs-cicd-service \
            --force-new-deployment
